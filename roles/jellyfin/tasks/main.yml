
# - name: Run Jellyfin repo installer
#   ansible.builtin.get_url:
#     url: https://repo.jellyfin.org/install-debuntu.sh
#     dest: /tmp/install-debuntu.sh
#     mode: '0755'

# - name: Execute Jellyfin repo installer
#   ansible.builtin.command: /tmp/install-debuntu.sh
#   args:
#     creates: /etc/apt/sources.list.d/jellyfin.list

- name: Add Jellyfin repo GPG key
  ansible.builtin.apt_key:
    url: https://repo.jellyfin.org/jellyfin_team.gpg.key
    state: present

- name: Add Jellyfin repo
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://repo.jellyfin.org/ubuntu {{ ansible_distribution_release }} main"
    filename: jellyfin
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Ensure required packages are installed
  ansible.builtin.apt:
    name:
      - curl
      - nginx
      - jellyfin
    state: present

- name: Ensure jellyfin is running and enabled
  ansible.builtin.service:
    name: jellyfin
    state: started
    enabled: true

- name: Deploy Jellyfin nginx proxy site
  ansible.builtin.copy:
    dest: /etc/nginx/sites-available/jellyfin
    content: |
      server {
          listen 80;
          server_name jellyfin.local;

          location / {
              proxy_pass http://127.0.0.1:8096;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }

- name: Enable jellyfin site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/jellyfin
    dest: /etc/nginx/sites-enabled/jellyfin
    state: link

- name: Remove default nginx site
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Ensure nginx is running and enabled
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true